--*********************************************************************************************************************--
--PostgreSQL Transaction
--A database transaction is a single unit of work that consists of one or more operations
-- BEGIN - Starts a transaction block.explicitly start a transaction

-- COMMIT - Commits the current transaction.apply the changes permanently to the database.

-- ROLLBACK - Rolls back the current transaction.undo the changes made to the database during the transaction.

-- SAVEPOINT - Creates a savepoint within a transaction

-- ROLLBACK TO SAVEPOINT - Rolls back to a specific savepoint

-- RELEASE SAVEPOINT - Removes a savepoint
--In practice, youâ€™ll use transactions in stored procedures in PostgreSQL and in the application code such as PHP, Java, and Python.
--*********************************************************************************************************************--

--Setting up a sample table
CREATE TABLE accounts (
    id INT GENERATED BY DEFAULT AS IDENTITY,
    name VARCHAR(100) NOT NULL,
    balance DEC(15,2) NOT NULL CHECK(balance >= 0),
    PRIMARY KEY(id)
);
--Begin a transaction
--However, you will not see the change if you connect to the PostgreSQL server in a new session and execute the query above:

--this will return results appear in a new query tool with selet * from accounts
INSERT INTO accounts(name,balance)
VALUES('Bob',10000);

--this will not return results appear in a new query tool with selet * from accounts since the changes are not commited
BEGIN;
INSERT INTO accounts(name,balance)
VALUES('Alice',10000);
--this will  return results appear in a new query tool with selet * from accounts since the changes are commited
-- start a transaction
BEGIN;
INSERT INTO accounts(name,balance)
VALUES('Alice',10000);
---- commit the change (or roll it back later)
COMMIT WORK;

---Roll back a transaction
-- start a transaction
BEGIN;

UPDATE accounts
SET balance = balance - 1000
WHERE id =  1;

-- rollback the changes
ROLLBACK;